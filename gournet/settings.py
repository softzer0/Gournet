"""
Django settings for gournet project.

Generated by 'django-admin startproject' using Django 1.9.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os #, datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'fbf0+@#!&9&!rb%6s4veb_#f7)r+1=u9ktofp_sc@=oi#%tnal'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'rest_framework',
    'rest_framework.authtoken',
#    'rest_framework_jwt',
#    'django_thumbs',
#    'messages_extends',
    'decorator_include',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.google',
#   'allauth.socialaccount.providers.linkedin_oauth2',
#   'allauth.socialaccount.providers.paypal',
#   'allauth.socialaccount.providers.twitter',
#   'djng',
#   'autoslug',
#   'cities_light',
    'phonenumber_field',
    'bootstrap3',
    'stronghold',
    'captcha',
    'main'
]

SITE_ID = 1

# JWT_AUTH = {
#    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=14)
# }

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'stronghold.middleware.LoginRequiredMiddleware'
]

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'main.pagination.PageNumberPagination',
    'DEFAULT_METADATA_CLASS': 'main.metadata.Metadata',
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',
       # 'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),
}

"""MESSAGES_STORAGES = ('messages_extends.storages.StickyStorage',
     'messages_extends.storages.PersistentStorage',
     'messages_extends.storages.FallbackStorage',
     'django.contrib.messages.storage.cookie.CookieStorage',
     'django.contrib.messages.storage.session.SessionStorage')"""

ROOT_PATH = os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir))
ROOT_URLCONF = 'gournet.urls'
AUTH_USER_MODEL = 'main.User'
LOGIN_URL = '/'
LOGIN_REDIRECT_URL = '/'

ACCOUNT_EMAIL_REQUIRED = True
# ACCOUNT_UNIQUE_EMAIL = True
SOCIALACCOUNT_QUERY_EMAIL = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
# EMAIL_CONFIRMATION_EXPIRE_DAYS = 3
# ACCOUNT_LOGIN_ON_PASSWORD_RESET = True
ACCOUNT_ADAPTER = "main.adapters.AccountAdapter"
SOCIALACCOUNT_ADAPTER = "main.adapters.SocialAccountAdapter"
SOCIALACCOUNT_AUTO_SIGNUP = False
ACCOUNT_PASSWORD_MIN_LENGTH = 8
ACCOUNT_LOGOUT_ON_GET = True

RECAPTCHA_PUBLIC_KEY = "***REMOVED***"
RECAPTCHA_PRIVATE_KEY = "***REMOVED***"
NOCAPTCHA = True

# Begin custom

EVENTS_PAGE_SIZE = 15
NOTIFICATION_PAGE_SIZE = 5
COMMENTS_PAGE_SIZE = 4

# End custom

SOCIALACCOUNT_PROVIDERS = {
    'facebook': {
        'SCOPE': ['email', 'user_birthday', 'user_location'],
        'AUTH_PARAMS': {'auth_type': 'https'},
        'METHOD': 'oauth2',
        'VERIFIED_EMAIL': True
    },
    'google': {
        #'SCOPE': ['https://www.googleapis.com/auth/userinfo.profile', 'https://www.googleapis.com/auth/userinfo.email',],
        'SCOPE': ['https://www.googleapis.com/auth/plus.login', 'https://www.googleapis.com/auth/userinfo.email', 'https://www.googleapis.com/auth/plus.me'],
        'AUTH_PARAMS': {'access_type': 'online'},
    }
}

SOCIALACCOUNT_FORMS = {'signup': 'main.allauth_forms.SocialSignupForm'}
ACCOUNT_FORMS = {'signup': 'main.allauth_forms.SignupForm'}

STRONGHOLD_DEFAULTS = True
STRONGHOLD_PUBLIC_URLS = (
    r'/admin/',
    r'/social/',
   # r'/api-auth/',
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request'
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

WSGI_APPLICATION = 'gournet.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Belgrade'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = ROOT_PATH+'/static/'